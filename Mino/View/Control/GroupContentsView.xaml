<!--<local:ListViewBase-->
<UserControl
	x:Class="Mino.GroupContentsView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Mino"
	mc:Ignorable="d"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	d:DesignHeight="450"
	d:DesignWidth="800">

	<Grid>

		<ListView
			FontSize="9"
			x:Name="ListView_GroupContentsView"
			AllowDrop="{ Binding
				(local:DragDropProperty.IsDropReady),
				UpdateSourceTrigger=PropertyChanged,
				RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }"
			Background="Transparent"
			SelectedItem="{ Binding Highlighted }"
			ItemsSource="{ Binding Items, UpdateSourceTrigger=PropertyChanged }">
			<ListView.Resources>
				<Style TargetType="{ x:Type GridViewColumnHeader }">
					<Setter Property="HorizontalContentAlignment" Value="Left" />
				</Style>
			</ListView.Resources>

			<ListView.ItemContainerStyle>
				<Style TargetType="{ x:Type ListViewItem }">
					<Setter Property="IsSelected" Value="{ Binding IsSelected }" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				</Style>
			</ListView.ItemContainerStyle>

			<i:Interaction.Triggers>

				<i:EventTrigger
					EventName="DragEnter"
					SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListView } } }">
					<i:InvokeCommandAction
						PassEventArgsToCommand="True"
						Command="{ Binding
							Path=DataContext.NoteReceiveCommand,
							RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
				</i:EventTrigger>

				<i:EventTrigger
					EventName="DragLeave"
					SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListView } } }">
					<i:InvokeCommandAction
						PassEventArgsToCommand="True"
						Command="{ Binding
							Path=(local:DragDropProperty.HoldCommand),
							RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
				</i:EventTrigger>

				<i:EventTrigger
					EventName="Drop"
					SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListView } } }">
					<i:InvokeCommandAction
						PassEventArgsToCommand="True"
						Command="{ Binding
							Path=(local:DragDropProperty.DropCommand),
							RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
				</i:EventTrigger>

			</i:Interaction.Triggers>

			<ListView.ItemTemplate>
				<DataTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="auto" />
						</Grid.ColumnDefinitions>

						<!-- ListViewItem: Close button -->
						<Button
							Template="{ StaticResource closeButtonTemplate }"
							Style="{ StaticResource closeButtonStyle }"
							Grid.Column="0"
							Margin="0 0 6 0"
							Padding="8 0 8 3"
							Name="RemoveItemButton"
							Content="x"
							CommandParameter="{ Binding }"
							Command="{ Binding
								(local:ListAction.RemoveCommand),
								RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
						
						<!-- GroupObject: grouped note preview -->
						<StackPanel Grid.Column="1" MinWidth="96">
							<TextBlock FontWeight="Bold" Text="{ Binding Title, Converter={ local:StringToStubConverter }, UpdateSourceTrigger=PropertyChanged }" />
							<TextBlock Text="{ Binding Text, Converter={ local:FlowDocumentStringToStubConverter } }" />
						</StackPanel>

						<!-- GroupObject: Priority -->
						<Ellipse
							Grid.Column="2"
							Width="18"
							Height="18"
							Stroke="#999"
							StrokeThickness="0.5"
							Margin="0 0 10 0"
							Fill="{ Binding Priority, Converter={ local:PriorityToColorConverter } }" />

						<i:Interaction.Triggers>

							<i:EventTrigger
								EventName="MouseMove"
								SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListViewItem } } }">
								<i:InvokeCommandAction
									PassEventArgsToCommand="True"
									Command="{ Binding
										Path=DataContext.PickupCommand,
										RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
							</i:EventTrigger>

							<i:EventTrigger
								EventName="DragOver"
								SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListViewItem } } }">
								<i:InvokeCommandAction
									PassEventArgsToCommand="True"
									Command="{ Binding
										Path=DataContext.ReorderCommand,
										RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
							</i:EventTrigger>

							<i:EventTrigger
								EventName="MouseDoubleClick"
								SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListViewItem } } }">
								<i:InvokeCommandAction
									CommandParameter="{ Binding
										Path=DataContext.Highlighted,
										RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }"
									Command="{ Binding
										Path=(local:SelectProperty.SelectCommand),
										RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupContentsView } } }" />
							</i:EventTrigger>

						</i:Interaction.Triggers>

					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>

	</Grid>

</UserControl>
