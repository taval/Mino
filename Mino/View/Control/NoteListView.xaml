<UserControl
	x:Class="Mino.NoteListView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Mino"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	mc:Ignorable="d"
	d:DesignHeight="450"
	d:DesignWidth="800">

	<!-- NOTE: in contrast with other bindings outside interaction triggers, 'Path' property must be explicit within one -->

	<Grid
		Height="{ Binding Parent.ActualHeight, Mode=OneWay, RelativeSource={ RelativeSource Self } }"
		Width="{ Binding Parent.ActualWidth, Mode=OneWay, RelativeSource={ RelativeSource Self } }">

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid Height="32" Margin="0 16 0 8" Background="Transparent">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<!-- the Add Note button -->

			<Button
				Grid.RowSpan="2"
				Margin="10 0"
				Padding="0 0 0 3"
				Template="{ StaticResource buttonTemplate }"
				Style="{ StaticResource buttonStyle }"
				Name="AddButton"
				Content="+"
				CommandParameter="{ Binding Highlighted }"
				Command="{ Binding
					(local:ListAction.CreateAtCommand),
					RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }" />
			
			<TextBlock
				Grid.Column="1"
				FontWeight="Bold"
				FontSize="12"
				Text="Notes" />
			<TextBlock
				Grid.Column="1"
				Grid.Row="1"
				FontSize="9"
				Text="{ Binding
					(local:SelectProperty.SelectedTitle),
					RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }" />

		</Grid>

		<ListView
			Background="Transparent"
			FontSize="9"
			Grid.Row="1"
			x:Name="ListView_NoteListView"
			AllowDrop="True"
			SelectedItem="{ Binding Highlighted }"
			ItemsSource="{ Binding Items, UpdateSourceTrigger=PropertyChanged }">

			<ListView.ItemContainerStyle>
				<Style TargetType="{ x:Type ListViewItem }" BasedOn="{ StaticResource listViewItemStyle }">
					<Setter Property="IsSelected" Value="{ Binding IsSelected }" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				</Style>
			</ListView.ItemContainerStyle>

			<ListView.ItemTemplate>
				<DataTemplate>
					<Grid Background="Transparent">

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="auto" />
						</Grid.ColumnDefinitions>

						<!-- ListViewItem: Close button -->
						<Button
							Template="{ StaticResource closeButtonTemplate }"
							Style="{ StaticResource closeButtonStyle }"
							Margin="0 0 6 0"
							Padding="8 0 8 3"
							x:Name="RemoveItemButton"
							Content="x"
							CommandParameter="{ Binding }"
							Command="{ Binding
								(local:ListAction.RemoveCommand),
								RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }" />

						<!-- NoteListObject: note preview -->
						<StackPanel Grid.Column="1" Background="Transparent" MinWidth="72pt">
							<TextBlock Text="{ Binding ItemId, StringFormat='Id: {0}', UpdateSourceTrigger=PropertyChanged }" />
							<TextBlock FontWeight="Bold" Text="{ Binding Title, Converter={ local:StringToStubConverter } }" />
							<TextBlock Text="{ Binding Text, Converter={ local:FlowDocumentStringToStubConverter } }" />
						</StackPanel>

						<!-- NoteListObject: Priority -->
						<Ellipse
							Grid.Column="2"
							Width="18"
							Height="18"
							Stroke="#999"
							StrokeThickness="0.5"
							Margin="0 0 10 0"
							Fill="{ Binding Priority, Converter={ local:PriorityToColorConverter } }" />

						<i:Interaction.Triggers>

							<i:EventTrigger
								EventName="MouseMove"
								SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListViewItem } } }">
								<i:InvokeCommandAction
									PassEventArgsToCommand="True"
									Command="{ Binding
										Path=DataContext.PickupCommand,
										RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }" />
							</i:EventTrigger>

							<i:EventTrigger
								EventName="DragOver"
								SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListViewItem } } }">
								<i:InvokeCommandAction
									PassEventArgsToCommand="True"
									Command="{ Binding
										Path=DataContext.ReorderCommand,
										RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }" />
							</i:EventTrigger>

							<i:EventTrigger
								EventName="MouseDoubleClick"
								SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type ListViewItem } } }">

								<i:InvokeCommandAction
									CommandParameter="{ Binding
										Path=DataContext.Highlighted,
										RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }"
									Command="{ Binding
										Path=(local:SelectProperty.SelectCommand),
										RelativeSource={ RelativeSource AncestorType={ x:Type local:NoteListView } } }" />
							</i:EventTrigger>

						</i:Interaction.Triggers>
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>

	</Grid>

</UserControl>
