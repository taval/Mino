<UserControl
	x:Class="ViewModelExtended.GroupTabsView"
    x:Name="TabControl_GroupTabsView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:local="clr-namespace:ViewModelExtended"
	xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
	mc:Ignorable="d" 
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	d:DesignHeight="450" d:DesignWidth="800">

    <Grid
		Height="{ Binding Parent.ActualHeight, Mode=OneWay, RelativeSource={ RelativeSource Self } }"
		Width="{ Binding Parent.ActualWidth, Mode=OneWay, RelativeSource={ RelativeSource Self } }">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Add Group button -->

        <Grid Height="32" Margin="0 16 0 8">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBlock
                FontWeight="Bold"
				FontSize="12"
				Text="Groups" />
            <TextBlock
                Grid.Row="1"
                FontSize="9"
                Text="{ Binding GroupTitle }" />

            <Button
				Grid.Column="1"
                Grid.RowSpan="2"
				Template="{ StaticResource buttonTemplate }"
				Style="{ StaticResource buttonStyle }"
				Name="AddButton"
				Content="+"
                DataContext="{ Binding GroupListViewModel.Highlighted }"
                Command="{ Binding
					Path=DataContext.GroupCreateAtCommand,
					RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } } }" />

        </Grid>

        <TabControl x:Name="GroupTabControl" Grid.Row="1">

            <i:Interaction.Triggers>

                <i:EventTrigger
					EventName="SelectionChanged"
					SourceObject="{ Binding RelativeSource={ RelativeSource AncestorType={ x:Type TabControl } } }">
                    <i:InvokeCommandAction
						PassEventArgsToCommand="True"
						Command="{ Binding
							Path=DataContext.SwitchTabsCommand,
							RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } } }" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <!-- GroupList -->

            <TabItem x:Name="GroupListTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse Width="10" Height="10" Fill="DarkGray" />
                        <TextBlock>List</TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <local:GroupListView
					x:Name="GroupListView"
					DataContext="{ Binding GroupListViewModel }"

					local:ListAction.SelectCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=DataContext.GroupSelectCommand,
						diag:PresentationTraceSources.TraceLevel=High }"

					local:ListAction.RemoveCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=DataContext.GroupDestroyCommand,
						diag:PresentationTraceSources.TraceLevel=High }" />

            </TabItem>

            <!-- Group -->

            <TabItem x:Name="GroupContentsTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse Width="10" Height="8" Fill="DarkGray" />
                        <TextBlock>Contents</TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <!--local:ListState.Incoming="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=(local:ListState.Incoming),
						diag:PresentationTraceSources.TraceLevel=High }"
					
					local:ListAction.ReceiveCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=(local:ListAction.ReceiveCommand),
						diag:PresentationTraceSources.TraceLevel=High }"-->
                <local:GroupContentsView
					x:Name="GroupContentsView"
					DataContext="{ Binding GroupContentsViewModel }"

                    local:ListAction.HoldCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=(local:ListAction.HoldCommand),
						diag:PresentationTraceSources.TraceLevel=High }"

					local:ListAction.DropCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=(local:ListAction.DropCommand),
						diag:PresentationTraceSources.TraceLevel=High }"

					local:ListAction.SelectCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=DataContext.GroupNoteSelectCommand,
						diag:PresentationTraceSources.TraceLevel=High }"

					local:ListAction.RemoveCommand="{ Binding
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } },
						Path=DataContext.GroupNoteDestroyCommand,
						diag:PresentationTraceSources.TraceLevel=High }" />

            </TabItem>
        </TabControl>

        <!--<i:Interaction.Triggers>

			<i:EventTrigger
				SourceObject="{ Binding ElementName=AddButton }"
				EventName="PreviewMouseLeftButtonDown">
				<i:InvokeCommandAction
					PassEventArgsToCommand="True"
					Command="{ Binding
						Path=DataContext.GroupCreateCommand,
						RelativeSource={ RelativeSource AncestorType={ x:Type local:GroupTabsView } } }" />
			</i:EventTrigger>

		</i:Interaction.Triggers>-->
    </Grid>

</UserControl>

	
