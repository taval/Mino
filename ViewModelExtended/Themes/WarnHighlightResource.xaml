<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- targeting general Control objects with basic error highlighting -->
	<Style x:Key="defaultListViewItemStyle" TargetType="{ x:Type Control }">
		<Setter Property="Margin" Value="5" />
		<Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="#eee" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

	<Style x:Key="toolTipWithErrorMessageStyle" TargetType="{ x:Type Control }" BasedOn="{ StaticResource defaultListViewItemStyle }">
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{ Binding RelativeSource={ RelativeSource Self }, Path=(Validation.Errors).CurrentItem.ErrorContent }" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="warnHighlightStyle" TargetType="{ x:Type Control }" BasedOn="{ StaticResource toolTipWithErrorMessageStyle }">
		<Style.Triggers>
			<!-- selected field -->
			<Trigger Property="IsFocused"  Value="True">
				<Setter Property="Background"  Value="#def"/>
			</Trigger>
			<!-- on invalid data entry -->
			<Trigger Property="Validation.HasError" Value="True">
				<Setter Property="Background" Value="#fdd" />
			</Trigger>
			<!-- on invalid display data -->
			<DataTrigger Binding="{ Binding Title, TargetNullValue='' }" Value="">
				<Setter Property="Background" Value="#fdd" />
				<Setter Property="BorderBrush" Value="Red" />
				<Setter Property="BorderThickness" Value="1" />
			</DataTrigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
